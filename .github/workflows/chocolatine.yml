name: chocolatine

env:
  MIRROR_URL: "git@github.com:romaincollignon/chocolatine.git"
  EXECUTABLES: "choco"
  ARGUMENTS: ""

on:
  push:
    branches-ignore:
    - "ga-ignore-*"
  pull_request:
    branches-ignore:
    - "ga-ignore-*"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run coding style checker
      run: |
        check.sh $(pwd) $(pwd) 2>&1 | tee coding_style_errors.txt
        echo "::set-output name=number_of_errors::$(grep -c 'Error' coding_style_errors.txt)"
        cat coding_style_errors.txt | awk -F: '/Error/ { print "::error file=" $1 ",line=" $2 ",col=" $3 "::" $4 }'
      id: check_coding_style_output

    - name: Fail if there are any coding style errors
      if: steps.check_coding_style_output.outputs.number_of_errors > 0
      run: exit 1

  # Verif compil:
  check_program_compilation:
      needs: [check_coding_style]
      name: "🔨 Check program compilation 🔨"
      runs-on: ubuntu-latest
      container:
        image: epitechcontent/epitest-docker:latest
      steps:
        - uses: actions/checkout@v3
        - id: check_compil
          run: make
          timeout-minutes: 2
        - run: make clean
        - run: |
            OIFS=$IFS
            IFS=','
            for x in $EXECUTABLES
              do
                ./$x $ARGUMENTS
              done
            IFS=$OIFS
  # Tests criterion:
  run_tests:
    needs: [check_program_compilation]
    name: "📝 Run criterion tests 📝"
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
      - id: run_tests
        run: make tests_run
        timeout-minutes: 2
  # Mirror:
  push_to_mirror:
    needs: [run_tests]
    name: "🪞 Push to mirror 🪞"
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}